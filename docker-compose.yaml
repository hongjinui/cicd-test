# Use root/example as user/password credentials
version: '3.1'

services:
  jenkins:
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile_jenkins2
    restart: always
    ports:
      - "8088:8080"
      - "50000:50000"
    expose:
      - "8080"
      - "50000"
    volumes:
      - '/jenkins:/var/jenkins_home'
      - '/var/run/docker.sock:/var/run/docker.sock'

  mongors1:
    container_name: mongors1
    # image: "mongo"
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile_mongo_rs
    restart: always
    ports:
      - "6001:27017"
    expose:
      - "27017"
    volumes:
      - '/mongoRs/mongoRs1:/data/db'
    # environment:
      # MONGO_HOST: localhost
      # MONGO_PORT: 27017
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
      # MONGO_INITDB_DATABASE: db
    command: mongod --replSet replicaSet
    networks:
      - mongo-networks


  mongors2:
    container_name: mongors2
    image: "mongo"
    restart: always
    ports:
      - "6002:27017"
    expose:
      - "27017"
    volumes:
      - '/mongoRs/mongoRs2:/data/db'
    # environment:
      # MONGO_HOST: localhost
      # MONGO_PORT: 27017
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
      # MONGO_INITDB_DATABASE: db
    command: mongod --replSet replicaSet
    networks:
      - mongo-networks
    depends_on:
      - mongors1

  mongors3:
    container_name: mongors3
    image: "mongo"
    restart: always
    ports:
      - "6003:27017"
    expose:
      - "27017"
    volumes:
      - '/mongoRs/mongoRs3:/data/db'
    # environment:
      # MONGO_HOST: localhost
      # MONGO_PORT: 27017
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
      # MONGO_INITDB_DATABASE: db
    command: mongod --replSet replicaSet
    networks:
      - mongo-networks
    depends_on:
      - mongors2

  mongo-express:
    image: "mongo-express"
    restart: always
    ports:
      - "8010:8081"
    environment:
      #ME_CONFIG_MONGODB_SERVER: mongo
      # ME_CONFIG_MONGODB_SERVER: mongoRs1,mongoRs2,mongoRs3
      ME_CONFIG_MONGODB_SERVER: mongors1
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      # ME_CONFIG_MONGODB_AUTH_DATABASE: db
      ME_CONFIG_MONGODB_AUTH_USERNAME: root
      ME_CONFIG_MONGODB_AUTH_PASSWORD: example
    networks:
      - mongo-networks
    depends_on:
      - mongors1
  
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    volumes:
      - './nginx/templates:/etc/nginx/templates'
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - type: bind
      #   source: './nginx/nginx.conf'
      #   target: '/etc/nginx/nginx.conf'
    expose:
      - "8090"
    ports:
      - "8090:80"
    networks:
      - mongo-networks

networks:
  mongo-networks:
    driver: bridge


